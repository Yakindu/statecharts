<?xml version="1.0" encoding="UTF-8"?>
<project default="generate.all" basedir="." name="org.yakindu.sct.doc.user" xmlns:if="ant:if" xmlns:unless="ant:unless">

	<!-- The documentation source files are located here: -->
	<property name="src.dir.name" value="src" />
	<property name="css.dir.name" value="css" />
	<property name="img.dir.name" value="images" />
	<property name="src.dir" location="${basedir}/${src.dir.name}" />
	<property name="css.dir" location="${basedir}/${css.dir.name}" />
	<property name="img.dir" location="${src.dir}/${img.dir.name}" />

	<!-- Target directory names and directories for various output formats: -->
	<property name="help.dir.name" value="help" />
	<property name="html.dir.name" value="html" />
	<property name="pdf.dir.name" value="pdf" />
	<property name="epub.dir.name" value="epub" />
	<property name="help.dir" location="${basedir}/${help.dir.name}" />
	<property name="html.dir" location="${basedir}/${html.dir.name}" />
	<property name="pdf.dir" location="${basedir}/${pdf.dir.name}" />
	<property name="epub.dir" location="${basedir}/${epub.dir.name}" />

	<!-- Libraries used by Ant tasks: -->
	<property name="lib.dir.name" value="lib" />
	<property name="lib.dir" location="${basedir}/${lib.dir.name}" />

	<!-- DocBook XSL-related files: -->
	<property name="docbook.xsl.dir" location="${basedir}/docbook-xsl" />

	<!-- Classpath for Xalan, which is needed to render DocBook documents. -->
	<path id="xalan.classpath">
		<fileset dir="${lib.dir}">
			<include name="xalan*.jar" />
			<include name="serializer*.jar" />
		</fileset>
	</path>


	<!-- Remove generated stuff: -->
	<target name="clean">
		<delete includeemptydirs="true">
			<fileset dir="${basedir}" defaultexcludes="false">
				<include name="${help.dir.name}/**" />
				<include name="${html.dir.name}/**" />
				<include name="${pdf.dir.name}/**" />
				<include name="${epub.dir.name}/**" />
			</fileset>
		</delete>
	</target>


	<target name="generate.all" description="Generate documentation in all supported formats" depends="generate.html, generate.eclipsehelp, generate.pdf" />

	<target name="generate.html" description="Generate HTML from DocBook documentation">
		<docbook.conversion src.dir="src" dst.dir="${html.dir.name}" basename="structure" style="${docbook.xsl.dir}/html.xsl" dst.extension="html" />
	</target>

	<!-- The help contexts file (contexts.xml) is not updated automatically. -->
	<target name="generate.eclipsehelp" description="Generate Eclipse help from DocBook documentation">
		<docbook.conversion src.dir="src" dst.dir="${help.dir.name}" basename="structure" style="${docbook.xsl.dir}/eclipsehelp.xsl" dst.extension="html" />
	</target>

	<target name="generate.pdf" description="Generate PDF from DocBook documentation">
		<local name="basename" />
		<property name="basename" value="structure" />
		<docbook.conversion src.dir="src" dst.dir="${pdf.dir.name}" basename="${basename}" style="${docbook.xsl.dir}/pdf.xsl" dst.extension="fo" />
		<fop fofile="${pdf.dir}/${basename}.fo" outfile="${pdf.dir}/${basename}.pdf" format="application/pdf" />
	</target>

	<taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop">
		<classpath>
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
		</classpath>
	</taskdef>

	<macrodef name="docbook.conversion" description="Converts a DocBook document into a target format.">
		<attribute name="src.dir" />
		<attribute name="dst.dir" />
		<attribute name="basename" />
		<attribute name="style" />
		<attribute name="dst.extension" />

		<sequential>
			<local name="src.file" />
			<local name="dst.file" />
			<local name="dst.dirname" />
			<local name="dst.subdir" />
			<local name="subdir.exists" />
			<property name="src.file" value="@{src.dir}/@{basename}.docbook" />
			<property name="dst.file" value="@{dst.dir}/@{basename}.@{dst.extension}" />
			<basename property="dst.dirname" file="@{dst.dir}" />

			<!-- Convert DocBook sources to target format: -->
			<xslt force="true" style="@{style}" in="${src.file}" out="${dst.file}" classpathref="xalan.classpath">
				<factory name="org.apache.xalan.processor.TransformerFactoryImpl" />
			</xslt>

			<!-- In the special case "eclipsehelp", HTML files have been generated one level too deep, so let's move them up: -->
			<sequential>
				<property name="dst.subdir" value="@{dst.dir}/${dst.dirname}" />
				<condition property="subdir.exists">
					<available file="${dst.subdir}" />
				</condition>
				<sequential if:set="subdir.exists">
					<move todir="@{dst.dir}">
						<fileset dir="${dst.subdir}">
							<include name="*" />
						</fileset>
					</move>
					<delete dir="${dst.subdir}" />
				</sequential>
			</sequential>

			<!-- Copy the CSS files to the destination directory: -->
			<copy todir="@{dst.dir}/${css.dir.name}">
				<fileset dir="${css.dir}">
					<include name="*" />
				</fileset>
			</copy>

			<!-- Copy the image files to the destination directory: -->
			<copy todir="@{dst.dir}/${img.dir.name}">
				<fileset dir="${img.dir}">
					<include name="*" />
				</fileset>
			</copy>

		</sequential>
	</macrodef>

</project>