
h1(#embedded_systems_integration_guide). Embedded Systems Integration Guide

State Machines generated by YAKINDU Statechart Tools can effectively be used on Embedded Systems. The integration contains different parts, but can mostly be described in a generic way, as most parts of the integration are platform independent.

The differences of the integration mostly stemp from the execution - CycleBased or EventDriven - of the state machine or the used functionalities, such as in, out and timed events. Other best practice implementation patterns can be based on whether a bare metal microcontroller or an operating system is used.

This guide will give an overview of the most common and well known design patterns in a generic way and provides examples for an Arduino, a MSP430 and a STM32.

h2(#Bare-Metal-vs-Operation-System). Bare Metal vs. Operating System

?
Bare metal -> schneller, effizienter, aber nicht skalierbar
OS -> Skalierbar, mehr Funktionalit√§t, aber langsamer

h2(#Bare-metal-cycle-based-integration). Bare metal CycleBased integration

This section describes how to integrate a state machine with a cycle based execution semantic on any microcontroller, so on any embedded device. The integration can be structured in three parts, which results the main part of your program.
* Initialization - called once
* While loop - calling the state machine until it's final
* Final - called if the state machine is final

!(large)images/images_embedded_systems_integration_guide/platform_integration_simple.png(High level description of bare metal cycle based state machine integration)!

p=. High level description of bare metal cycle based state machine integration


 According to the used State Machine, there are different parts, which must be take into account:
* In Events 
* Timed Events
* Out Events