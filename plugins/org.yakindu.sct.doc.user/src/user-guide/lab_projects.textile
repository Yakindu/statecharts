
p. 

h1(#lab_projects). Lab features

Researching, prototyping, and putting our ideas into code, aside from the day-to-day business, is an essential part of our development culture. YAKINDU Labs is a collection of projects that are currently in beta phase and therefore not yet released with any YAKINDU product bundles. As we love early feedback, we regularly blog about what's going on behind the scenes. So try it, and get in touch with us!

!(small)images/lab_projects_yakindu_labs_icon.png(Lab Projects Icon)!

h2(#lab_projects_python_codegen). Python code generator

As Python is one of the most favoured programming languages, we have developed a code generator for Python. Read our blog article on that topic, or just try out our examples. We have also one example showing how to make the generated Python code run on a Raspberry Pi.

h3(#lab_projects_python_codegen_blogs). Blog articles

"Python Code Generation With YAKINDU Statechart Tools":https://blogs.itemis.com/en/python-code-generation-with-yakindu-statechart-tools

h3(#lab_projects_python_codegen_examples). Examples

"Traffic Light with Python":https://www.itemis.com/en/yakindu/state-machine/documentation/examples/org-yakindu-sct-examples-trafficlight-python

"Traffic Light on the Raspberry Pi":https://www.itemis.com/en/yakindu/state-machine/documentation/examples/org-yakindu-sct-examples-trafficlight-python-raspberry

h2(#lab_projects_typescript_codegen). Typescript code generator

The typescript code generator was developed in the context of an HMI usecase in which a car infotainment system was prototypically implemented with web technologies. The generated state machine code was seemlessly integrated into an Angular application. Read also our blog articles and import our example to learn more.

h3(#lab_projects_typescript_codegen_blogs). Blog articles

"Typescript Code Generation With YAKINDU Statechart Tools":https://blogs.itemis.com/en/typescript-code-generation-with-yakindu-statechart-tools

h3(#lab_projects_typescript_codegen_examples). Examples

"Web-based Car HMI":https://www.itemis.com/en/yakindu/state-machine/documentation/examples/org-yakindu-sct-examples-ycar

h2(#lab_projects_swift_codegen). Swift code generator

The swift code generator was built as part of a student project. It is in a beta phase. Feel free to try out our example.

h3(#lab_projects_swift_codegen_examples). Examples

"Swift Showcase App":https://www.itemis.com/en/yakindu/state-machine/documentation/examples/org-yakindu-sct-examples-swift

h2(#lab_projects_csharp_codegen). C# code generator

The C# code generator is an external contribution and therefore open-source. Currently we have no resources on the C# code generator but we are working on providing a simple example. See How to install code generators for installation details.

h2(#lab_projects_rkh_codegen). RKH code generator

RKH (Reative frameworK for Hierarchical state machines) is a state machine framework used to build software for reactive and real-time embedded systems in a safely and timely way. In a cooperation with its developers at "VortexMakes":https://github.com/vortexmakes we created created a code generator which directly generates RKH compliant code out of YAKINDU statecharts. Read our blog articles and try out our examples if you want to know more:

h3(#lab_projects_rkh_codegen_blogs). Blog articles

"Introduced: New RKH State Machine Framework for Reactive and Real-Time Embedded Systems":https://blogs.itemis.com/en/rkh-state-machine-framework-for-reactive-and-real-time-embedded-systems

"Embedded System Development With YAKINDU Statechart Tools and RKH":https://blogs.itemis.com/en/embedded-system-development-with-yakindu-statechart-tools-and-rkh

h3(#lab_projects_rkh_codegen_examples). Examples

"Blinky LED for RKH Framework on STM32":https://www.itemis.com/en/yakindu/state-machine/documentation/examples/org-yakindu-sct-examples-rkh-blinky-stm32

"Blinky LED for RKH Framework on Linux":https://www.itemis.com/en/yakindu/state-machine/documentation/examples/org-yakindu-sct-examples-rkh-blinky

h2(#lab_projects_howto_install_codegen). How to install more code generators

The code generators listed in this chapter are not part of our official product bundles as their are currently in a beta phase. This means that you need to install them separately if you want to use them. The easiest way is to use the generator model wizard and select _Install Moreâ€¦_ This will list all available code generators that are not yet installed.

<iframe width="560" height="315" src="https://www.youtube.com/embed/gpINwwyfnqk" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen"></iframe>


h2(#lab_projects_howto_import_examples). How to import code generator examples

For most of the code generators listed here we also provide example projects. The easiest way is to open the example wizard in YAKINDU Statechart Tools. In case an example needs some additional dependencies you can install them directly from the example wizard.

<iframe width="560" height="315" src="https://www.youtube.com/embed/VXq_g-Mz2BQ" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen"></iframe>


