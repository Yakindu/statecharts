module org.yakindu.base.expressions.GenerateExpressions

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var fileExtensions = "exp"
var projectName = "org.yakindu.base.expressions"
var runtimeProject = "../${projectName}"
var rootPath = ".."// 
Workflow {
	bean = StandaloneSetup {
		scanClassPath = true
		platformUri = "${runtimeProject}/.."
		registerGenModelFile = "platform:/resource/org.yakindu.base.expressions/model/Expressions.genmodel"
		registerGenModelFile = "platform:/resource/org.yakindu.base.types/model/types.genmodel"
		registerEcoreFile = "platform:/resource/org.yakindu.base.types/model/types.ecore"
		registerEcoreFile = "platform:/resource/org.yakindu.base.expressions/model/Expressions.ecore"
	}
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {

				baseName = projectName
				rootPath = rootPath
				eclipsePlugin = {
					enabled = true
				}
				genericIde = {
					name = "${projectName}.ui"
					srcGen = "${rootPath}/${projectName}.ui/src-gen"
					enabled = true
					manifest = {
						merge = false
					}
				}

				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * (c) by committers of YAKINDU */"
			}
		}
		language = StandardLanguage {
			name = "org.yakindu.base.expressions.Expressions"
			fileExtensions = fileExtensions
			serializer = {
				generateStub = false
			}

			generator = {
				generateStub = false
			}
		}

	}
}


