/**
 * Copyright (c) 2011 committers of YAKINDU and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     committers of YAKINDU - initial API and implementation
 */
grammar org.yakindu.sct.generator.genmodel.SGen with org.yakindu.base.expressions.Expressions

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.yakindu.org/base/types/2.0.0" as types
import "http://www.yakindu.org/sct/statechart/SGen"

/**
 * @author Andreas Muelder
 */
GeneratorModel returns GeneratorModel:
	'GeneratorModel' 'for' generatorId=GENERATOR_ID '{'
	(properties+=PropertyDefinition)*
	(entries+=GeneratorEntry)*
	'}';

PropertyDefinition returns types::Property:
	('var') name=ID ':' typeSpecifier=TypeSpecifier
	'=' initialValue=Expression;

GeneratorEntry returns GeneratorEntry:
	contentType=ID elementRef=[ecore::EObject|QID] '{'
	(features+=FeatureConfiguration)*
	'}';

FeatureConfiguration returns FeatureConfiguration:
	{FeatureConfiguration} 'feature' type=[FeatureType] '{'
	(parameterValues+=FeatureParameterValue)*
	'}';

FeatureParameterValue returns FeatureParameterValue:
	{FeatureParameterValue} parameter=[FeatureParameter] '=' expression=Expression;

GENERATOR_ID:
	ID (('::' | '.') ID)*;