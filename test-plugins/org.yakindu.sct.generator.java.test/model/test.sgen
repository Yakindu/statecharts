GeneratorModel for sctunit::java {

	test AllTests {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
	}

	test AlwaysOncycle {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage = "org.yakindu.scr.alwaysoncycle"
			typeName = "AlwaysOncycleStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test AssignmentAsExpression {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.assignmentasexpression" 
			typeName = "AssignmentAsExpressionStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}
	
	test BooleanExpressions {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.booleanexpressions" 
			typeName = "BooleanExpressionsStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}
	
	test BitExpressions {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.bitexpressions" 
			typeName = "BitExpressionsStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}
	
	test BitwiseExecutionOrder {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.bitwiseexecutionorder" 
			typeName = "BitwiseExecutionOrderStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}
	
	test Choice {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.choice" 
			typeName = "ChoiceStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test CastExpressions {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.castexpressions" 
			typeName = "CastExpressionsStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test CKeywords {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.ckeywords" 
			typeName = "CKeywordsStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test ConditionalExpression {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.conditionalexpressions"
			typeName = "ConditionalExpressionsStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test ConstantsTests {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.constants" 
			typeName = "ConstantsStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}
	
	test ConstantsVariationTests {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.constantsvariation" 
			typeName = "ConstantsVariationStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test ConstOnlyInternalScope {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage = "org.yakindu.scr"
			typeName = "ConstOnlyInternalScopeStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test ConstOnlyDefaultScope {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage = "org.yakindu.scr"
			typeName = "ConstOnlyDefaultScopeStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test ConstOnlyNamedScope {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage = "org.yakindu.scr"
			typeName = "ConstOnlyNamedScopeStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test Declarations {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.declarations" 
			typeName = "DeclarationsStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test DeepHistory {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.deephistory" 
			typeName = "DeepHistoryStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test DeepEntry {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.deepentry" 
			typeName = "DeepEntryStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test DynamicChoice {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.dynamicchoice" 
			typeName = "DynamicChoiceStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test EmptyTransition {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.emptytransition" 
			typeName = "EmptyTransitionStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test EnterState {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.enterstate" 
			typeName = "EnterStateStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test EntryChoice {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.entrychoice" 
			typeName = "EntryChoiceStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test EntryExitSelfTransition {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.entryexitselftransition" 
			typeName = "EntryExitSelfTransitionStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test EntryReactionAction {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage = "org.yakindu.scr"
			typeName = "EntryReactionActionStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test ExitOnSelfTransition {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.exitonselftransition" 
			typeName = "ExitOnSelfTransitionStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test ExitSequence {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.exitsequence" 
			typeName = "ExitSequenceStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test FeatureCalls {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.featurecalls" 
			typeName = "FeatureCallsStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test FinalState {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.finalstate" 
			typeName = "FinalStateStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}
	
	test FloatModulo {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.floatmodulo" 
			typeName = "FloatModuloStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test Guard {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.guard" 
			typeName = "GuardStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test GuardedEntry {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.guardedentry" 
			typeName = "GuardedEntryStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test GuardedExit {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.guardedexit" 
			typeName = "GuardedExitStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test HistoryWithExitPoint {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.historywithexitpoint" 
			typeName = "HistoryWithExitPointStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test HistoryWithoutInitialStep {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.historywithoutinitialstep"
			typeName = "HistoryWithoutInitialStepStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test InEventLifeCycle {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.ineventlifecycle" 
			typeName = "InEventLifeCycleStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test IntegerExpressions {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.integerexpressions" 
			typeName = "IntegerExpressionsStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}
	
	test LocalReactions {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.localreactions" 
			typeName = "LocalReactionsStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test LogicalAndTests {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.logicaland" 
			typeName = "LogicalAndStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test LogicalOrTests {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.logicalor"
			typeName = "LogicalOrStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test NamedInterfaceAccess {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.namedinterfaceaccess" 
			typeName = "NamedInterfaceAccessStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test NullCheck {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.nullcheck"
			typeName = "NullCheckStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test OperationsTest {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.operations"
			typeName = "OperationsStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test OperationsWithoutBraces {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.operationswithoutbraces" 
			typeName = "OperationsWithoutBracesStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test OutEventLifeCycle {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.outeventlifecycle" 
			typeName = "OutEventLifeCycleStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test Parenthesis {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.parenthesis" 
			typeName = "ParenthesisStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test PerformanceTests {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.performancetest"
			typeName = "PerformanceTestStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test PriorityValues {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.priorityvalues"
			typeName = "PriorityValuesStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test RaiseEvent {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.raiseevent" 
			typeName = "RaiseEventStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test ReadOnlyVariable {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.readonlyvariable" 
			typeName = "ReadOnlyVariableStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test SameNameDifferentRegion {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.samenamedifferentregion"
			typeName = "SameNameDifferentRegionStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test ShadowValueParameter {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.shadowvalueparameter"
			typeName = "ShadowValueParameterStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test ShallowHistory {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.shallowhistory"
			typeName = "ShallowHistoryStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test ShallowHistoryWithDeepEntry {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.shallowhistorywithdeepentry"
			typeName = "ShallowHistoryWithDeepEntryStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test SimpleEvent {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.simpleevent" 
			typeName = "SimpleEventStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test SimpleHierachy {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.simplehierachy"
			typeName = "SimpleHierachyStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test StatechartLocalReactions {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.statechartlocalreactions" 
			typeName = "StatechartLocalReactionsStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test StatechartActive {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.statechartactive" 
			typeName = "StatechartActiveStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test StateIsActive {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.stateisactive" 
			typeName = "StateIsActiveStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test StaticChoice {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.staticchoice" 
			typeName = "StaticChoiceStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test STextKeywordsInStatesAndRegions {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.stextkeywordsinstatesandregions"
			typeName = "STextKeywordsInStatesAndRegionsStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test StringExpressions {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.stringexpressions" 
			typeName = "StringExpressionsStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test SyncFork {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.syncfork" 
			typeName = "SyncForkStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test SyncJoin {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.syncjoin" 
			typeName = "SyncJoinStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test TimedTransitions {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.timedtransitions" 
			typeName = "TimedTransitionsStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test TypeAlias {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.typealias" 
			typeName = "TypeAliasStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test TransitionWithoutCondition {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.transitionwithoutcondition"
			typeName = "TransitionWithoutConditionStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}

	test TriggerGuardExpressions {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.triggerguardexpressions" 
			typeName = "TriggerGuardExpressionsStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test TriggerExpressionPrecedence {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage = "org.yakindu.scr"
			typeName = "TriggerExpressionPrecedenceStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test ValuedEvents {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.valuedevents" 
			typeName = "ValuedEventsStatemachine"
			libraryTargetFolder = "src-gen"
		}
	}

	test StatemachineKeywords {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.statechartkeywords" 
			typeName = "StatechartKeywordsStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}
	
	test UnreachableStates {
		feature Naming {
			basePackage = "org.yakindu.sct.generator.java.test"
		}

		feature Outlet {
			targetProject = "org.yakindu.sct.generator.java.test"
			targetFolder = "test-gen"
		}
		
		feature StatechartNaming {
			basePackage =  "org.yakindu.scr.unreachablestates" 
			typeName = "UnreachableStatesStatemachine" 
			libraryTargetFolder = "src-gen"
		}
	}
}