/** Generated by YAKINDU Statechart Tools code generator. */

package org.yakindu.sct.generator.java.test;

import org.junit.*;
import static org.junit.Assert.*;
import org.yakindu.scr.raiseevent.RaiseEventStatemachine;
import org.yakindu.scr.raiseevent.RaiseEventStatemachine.State;
import org.yakindu.sct.VirtualTimer;
import org.yakindu.sct.VirtualTimer.VirtualTimeTask;
import org.yakindu.sct.VirtualTimer.CycleTimeEventTask;

/**
 * Unit TestCase for RaiseEvent
 */
@SuppressWarnings("all")
public class RaiseEvent {
	
	private RaiseEventStatemachine statemachine;	
	private VirtualTimer timer;
	
	
	@Before
	public void raiseEvent_setUp() {
		statemachine = new RaiseEventStatemachine();
		timer = new VirtualTimer(200);
		timer.schedulePeriodicalTask(new CycleTimeEventTask(statemachine), 200, 200);
		
		statemachine.init();
		
	}

	@After
	public void raiseEvent_tearDown() {
		statemachine = null;
		
		timer = null;
	}
	
	@Test
	public void raiseEvent() {
		statemachine.enter();
		assertTrue(statemachine.isStateActive(RaiseEventStatemachine.State.SECOND_REGION_SATEA));
		assertTrue(statemachine.isStateActive(RaiseEventStatemachine.State.MAIN_REGION_STATEA));
		statemachine.raiseE2();
		timer.cycleLeap(1l);
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(RaiseEventStatemachine.State.SECOND_REGION_STATEB));
		assertTrue(statemachine.isStateActive(RaiseEventStatemachine.State.MAIN_REGION_STATEB));
	}
}
