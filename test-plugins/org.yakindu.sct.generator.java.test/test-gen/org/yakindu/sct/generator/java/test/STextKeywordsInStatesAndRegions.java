/** Generated by YAKINDU Statechart Tools code generator. */

package org.yakindu.sct.generator.java.test;

import org.junit.*;
import static org.junit.Assert.*;
import org.yakindu.scr.stextkeywordsinstatesandregions.STextKeywordsInStatesAndRegionsStatemachine;
import org.yakindu.scr.stextkeywordsinstatesandregions.STextKeywordsInStatesAndRegionsStatemachine.State;
import org.yakindu.sct.VirtualTimer;
import org.yakindu.sct.VirtualTimer.VirtualTimeTask;
import org.yakindu.sct.VirtualTimer.CycleTimeEventTask;

/**
 * Unit TestCase for STextKeywordsInStatesAndRegions
 */
@SuppressWarnings("all")
public class STextKeywordsInStatesAndRegions {
	
	private STextKeywordsInStatesAndRegionsStatemachine statemachine;	
	private VirtualTimer timer;
	
	
	@Before
	public void sTextKeywordsInStatesAndRegions_setUp() {
		statemachine = new STextKeywordsInStatesAndRegionsStatemachine();
		timer = new VirtualTimer(200);
		timer.schedulePeriodicalTask(new CycleTimeEventTask(statemachine), 200, 200);
		
		statemachine.init();
		
	}

	@After
	public void sTextKeywordsInStatesAndRegions_tearDown() {
		statemachine = null;
		
		timer = null;
	}
	
	@Test
	public void activeCheckWithSTextNamedStates() {
		statemachine.enter();
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_interface));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_event));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE1();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_event));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE2();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE1();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE2();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE1();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE2();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE1();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE2();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_raise));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE1();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_active));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE2();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_interface));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE1();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_event));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE2();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_in));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE1();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_var));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE2();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_external));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE1();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_default));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE2();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_entry));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE1();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_always));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE2();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_raise));
		statemachine.raiseE1();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_valueof));
		statemachine.raiseE2();
		timer.cycleLeap(1l);
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.default_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.operation_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.namespace_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.local_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.interface_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.internal_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.event_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.in_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.out_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.var_valueof));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.readonly_namespace));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.external_internal));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.else_local));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.entry_out));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.exit_readonly));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.always_operation));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.oncycle_else));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.raise_exit));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.valueof_oncycle));
		assertTrue(statemachine.isStateActive(STextKeywordsInStatesAndRegionsStatemachine.State.active_valueof));
	}
}
