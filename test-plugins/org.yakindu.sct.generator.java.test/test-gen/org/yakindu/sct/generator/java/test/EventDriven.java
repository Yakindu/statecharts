/** Generated by YAKINDU Statechart Tools code generator. */

package org.yakindu.sct.generator.java.test;

import org.junit.*;
import static org.junit.Assert.*;
import org.yakindu.scr.eventdriven.EventDrivenStatemachine;
import org.yakindu.scr.eventdriven.EventDrivenStatemachine.State;

/**
 * Unit TestCase for eventDriven
 */
@SuppressWarnings("all")
public class EventDriven {
	
	private EventDrivenStatemachine statemachine;	
	
	
	@Before
	public void eventDriven_setUp() {
		statemachine = new EventDrivenStatemachine();
		
		statemachine.init();
		
	}

	@After
	public void eventDriven_tearDown() {
		statemachine = null;
		
	}
	
	@Test
	public void test() {
		statemachine.enter();
		assertTrue(statemachine.isRaisedRunning());
		statemachine.raiseInEvent();
		assertTrue(statemachine.isRaisedOe1());
		assertTrue(statemachine.isRaisedOe2());
		assertTrue(statemachine.isRaisedOe3());
		assertTrue(statemachine.isStateActive(EventDrivenStatemachine.State.main_region_StateD));
		statemachine.raiseInEventBool(true);
		assertTrue(statemachine.isStateActive(EventDrivenStatemachine.State.main_region_StateE));
		assertTrue(statemachine.isStateActive(EventDrivenStatemachine.State.main_region_StateE__region0_State2));
		statemachine.raiseInEvent();
		assertTrue(statemachine.isStateActive(EventDrivenStatemachine.State.main_region_StateF));
		statemachine.getInterfaceNamedI().raiseNamedInEvent();
		assertTrue(statemachine.isFinal());
		statemachine.exit();
	}
}
