/* Generated by YAKINDU Statechart Tools code generator. */

#include "gtest/gtest.h"
#include "EventDriven.h"

#include "sc_timer_service.h"


static EventDriven statechart;


//! The timers are managed by a timer service. */
static sc_unit_timer_service_t timer_service;
			
class EventDrivenTest : public ::testing::Test{
	protected:
	virtual void SetUp() {
		eventDriven_init(&statechart);
		sc_timer_service_init(
			&timer_service,
			0,
			(sc_run_cycle_fp) &eventDriven_runCycle,
			true,
			200,
			&statechart
		);
	}
};


TEST_F(EventDrivenTest, test) {
	
	eventDriven_enter(&statechart);
	EXPECT_TRUE(eventDrivenIface_israised_running(&statechart));
	eventDrivenIface_raise_inEvent(&statechart);
	EXPECT_TRUE(eventDrivenIface_israised_oe1(&statechart));
	EXPECT_TRUE(eventDrivenIface_israised_oe2(&statechart));
	EXPECT_TRUE(eventDrivenIface_israised_oe3(&statechart));
	EXPECT_TRUE(eventDriven_isStateActive(&statechart, EventDriven_main_region_StateD));
	eventDrivenIface_raise_inEventBool(&statechart, true);
	EXPECT_TRUE(eventDriven_isStateActive(&statechart, EventDriven_main_region_StateE));
	EXPECT_TRUE(eventDriven_isStateActive(&statechart, EventDriven_main_region_StateE__region0_State2));
	eventDrivenIface_raise_inEvent(&statechart);
	EXPECT_TRUE(eventDriven_isStateActive(&statechart, EventDriven_main_region_StateF));
	eventDrivenIfaceNamedI_raise_namedInEvent(&statechart);
	EXPECT_TRUE(eventDriven_isFinal(&statechart));
	eventDriven_exit(&statechart);
}


