/* Generated by YAKINDU Statechart Tools code generator. */

#include "gtest/gtest.h"
#include "PriorityValues.h"

#include "sc_timer_service.h"



//! The timers are managed by a timer service. */
static sc_unit_timer_service_t timer_service;

static PriorityValues statechart;

class PriorityValuesTest : public ::testing::Test{
	protected:
	virtual void SetUp() {
		priorityValues_init(&statechart);
		sc_timer_service_init(
			&timer_service,
			0,
			(sc_run_cycle_fp) &priorityValues_runCycle,
			false,
			200,
			&statechart
		);
	}
};


TEST_F(PriorityValuesTest, transitionPriority) {
	priorityValues_enter(&statechart);
	EXPECT_TRUE(priorityValues_isStateActive(&statechart, PriorityValues_main_region_A));
	priorityValuesIface_raise_event1(&statechart);
	sc_timer_service_proceed_cycles(&timer_service, 1);
	EXPECT_TRUE(priorityValues_isStateActive(&statechart, PriorityValues_main_region_C));
}
TEST_F(PriorityValuesTest, regionPriority) {
	priorityValues_enter(&statechart);
	EXPECT_TRUE(priorityValues_isStateActive(&statechart, PriorityValues_someRegion_A));
	priorityValuesIface_raise_event2(&statechart);
	sc_timer_service_proceed_cycles(&timer_service, 1);
	EXPECT_TRUE(priorityValues_isStateActive(&statechart, PriorityValues_someRegion_B));
	EXPECT_TRUE(!priorityValues_isStateActive(&statechart, PriorityValues_main_region_E));
}


