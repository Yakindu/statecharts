/* Generated by YAKINDU Statechart Tools code generator. */
#include "gtest/gtest.h"
#include "SyncFork.h"


static SyncFork statechart;


class StatemachineTest : public ::testing::Test{
	protected:
	virtual void SetUp() {
		syncFork_init(&statechart);
	}
};


TEST_F(StatemachineTest, syncForkTest) {
	syncFork_enter(&statechart);
	EXPECT_TRUE(syncFork_isStateActive(&statechart, SyncFork_main_region_A));
	syncForkIface_raise_f(&statechart);
	syncFork_runCycle(&statechart);
	EXPECT_TRUE(syncFork_isStateActive(&statechart, SyncFork_main_region_B));
	EXPECT_TRUE(syncFork_isStateActive(&statechart, SyncFork_main_region_B_r1_C1));
	EXPECT_TRUE(syncFork_isStateActive(&statechart, SyncFork_main_region_B_r2_D1));
	syncForkIface_raise_f(&statechart);
	syncFork_runCycle(&statechart);
	EXPECT_TRUE(syncFork_isStateActive(&statechart, SyncFork_main_region_B));
	EXPECT_TRUE(syncFork_isStateActive(&statechart, SyncFork_main_region_B_r1_C2));
	EXPECT_TRUE(syncFork_isStateActive(&statechart, SyncFork_main_region_B_r2_D2));
	syncForkIface_raise_e(&statechart);
	syncFork_runCycle(&statechart);
	EXPECT_TRUE(syncFork_isStateActive(&statechart, SyncFork_main_region_A));
	syncForkIface_raise_f(&statechart);
	syncFork_runCycle(&statechart);
	EXPECT_TRUE(syncFork_isStateActive(&statechart, SyncFork_main_region_B));
	EXPECT_TRUE(syncFork_isStateActive(&statechart, SyncFork_main_region_B_r1_C1));
	EXPECT_TRUE(syncFork_isStateActive(&statechart, SyncFork_main_region_B_r2_D1));
}


