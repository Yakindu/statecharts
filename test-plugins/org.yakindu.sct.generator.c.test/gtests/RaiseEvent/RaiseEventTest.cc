/* Generated by YAKINDU Statechart Tools code generator. */

#include "gtest/gtest.h"
#include "RaiseEvent.h"

#include "sc_timer_service.h"

static RaiseEvent statechart;



//! The timers are managed by a timer service. */
static sc_unit_timer_service_t timer_service;
			
class RaiseEventTest : public ::testing::Test{
	protected:
	virtual void SetUp() {
		raiseEvent_init(&statechart);
		sc_timer_service_init(
			&timer_service,
			0,
			(sc_run_cycle_fp) &raiseEvent_runCycle,
			false,
			200,
			&statechart
		);
	}
};


TEST_F(RaiseEventTest, raiseEvent) {
	
	raiseEvent_enter(&statechart);
	EXPECT_TRUE(raiseEvent_isStateActive(&statechart, RaiseEvent_second_region_SateA));
	EXPECT_TRUE(raiseEvent_isStateActive(&statechart, RaiseEvent_main_region_StateA));
	raiseEventIface_raise_e2(&statechart);
	sc_timer_service_proceed_cycles(&timer_service, 1);
	sc_timer_service_proceed_cycles(&timer_service, 1);
	EXPECT_TRUE(raiseEvent_isStateActive(&statechart, RaiseEvent_second_region_StateB));
	EXPECT_TRUE(raiseEvent_isStateActive(&statechart, RaiseEvent_main_region_StateB));
}


