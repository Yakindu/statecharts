/** Generated by YAKINDU Statechart Tools code generator. */

#include "gtest/gtest.h"
#include "ShadowValueParameter.h"

#include "sc_timer_service.h"

static ShadowValueParameter statechart;


class ShadowValueParameterTest : public ::testing::Test
{
public:
	/* All operations from the SCTUnit test class. */
	void shadowValueParameterTest();
	void setTimer(ShadowValueParameter* statechart, const sc_eventid evid, const sc_integer time_ms, const sc_boolean periodic);
	void unsetTimer(ShadowValueParameter* handle, const sc_eventid evid);
protected:
	sc_unit_timer_service_t timer_service;
	virtual void SetUp();
};

static ShadowValueParameterTest * tc;


void ShadowValueParameterTest::SetUp()
{
	shadowValueParameter_init(&statechart);
	sc_timer_service_init(
		&timer_service,
		0,
		(sc_run_cycle_fp) &shadowValueParameter_runCycle,
		false,
		200,
		&statechart
	);
	
	
	tc = this;
}
void ShadowValueParameterTest::shadowValueParameterTest()
{
	shadowValueParameter_enter(&statechart);
	shadowValueParameterIface_set_value(&statechart,2);
	EXPECT_TRUE((shadowValueParameterIface_get_value(&statechart)== 2));
	shadowValueParameter_exit(&statechart);
}

void ShadowValueParameterTest::setTimer(ShadowValueParameter* statechart, const sc_eventid evid, const sc_integer time_ms, const sc_boolean periodic){
	sc_timer_t timer;
	sc_timer_init(&timer, time_ms, periodic, evid);
	insert_timer(&(tc->timer_service), timer);
}

void ShadowValueParameterTest::unsetTimer(ShadowValueParameter* handle, const sc_eventid evid){
	delete_task(&(tc->timer_service), find_time_event(&timer_service, evid));
}

TEST_F(ShadowValueParameterTest, shadowValueParameterTest) {
	shadowValueParameterTest();
}


