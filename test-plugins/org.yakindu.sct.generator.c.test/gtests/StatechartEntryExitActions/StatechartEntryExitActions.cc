/* Generated by YAKINDU Statechart Tools code generator. */

#include "gtest/gtest.h"
#include "StatechartEntryAndExitActions.h"

#include "sc_timer_service.h"

static StatechartEntryAndExitActions statechart;


void entryActionsAreExecutedOnEnteringStatechartOnlyIfGuardIsTrue();
void exitActionsAreExecutedOnEnteringStatechartOnlyIfGuardIsTrue();

//! The timers are managed by a timer service. */
static sc_unit_timer_service_t timer_service;
			
class StatechartEntryExitActions : public ::testing::Test{
	protected:
	virtual void SetUp() {
		statechartEntryAndExitActions_init(&statechart);
		sc_timer_service_init(
			&timer_service,
			0,
			(sc_run_cycle_fp) &statechartEntryAndExitActions_runCycle,
			false,
			200,
			&statechart
		);
	}
};

void entryActionsAreExecutedOnEnteringStatechartOnlyIfGuardIsTrue(){
	EXPECT_TRUE(statechartEntryAndExitActionsIface_get_x(&statechart)== 0l);
	EXPECT_TRUE(statechartEntryAndExitActionsIface_get_y(&statechart)== 0l);
	statechartEntryAndExitActionsIface_set_b(&statechart,false);
	statechartEntryAndExitActions_enter(&statechart);
	EXPECT_TRUE(statechartEntryAndExitActionsIface_get_x(&statechart)== 2l);
	EXPECT_TRUE(statechartEntryAndExitActionsIface_get_y(&statechart)== 3l);
}
void exitActionsAreExecutedOnEnteringStatechartOnlyIfGuardIsTrue(){
	statechartEntryAndExitActions_enter(&statechart);
	statechartEntryAndExitActions_exit(&statechart);
	EXPECT_TRUE(statechartEntryAndExitActionsIface_get_x(&statechart)== 8l);
	EXPECT_TRUE(statechartEntryAndExitActionsIface_get_y(&statechart)== 2l);
}

TEST_F(StatechartEntryExitActions, entryActionsAreExecutedOnEnteringStatechart) {
	
	EXPECT_TRUE(statechartEntryAndExitActionsIface_get_x(&statechart)== 0l);
	EXPECT_TRUE(statechartEntryAndExitActionsIface_get_y(&statechart)== 0l);
	statechartEntryAndExitActionsIface_set_b(&statechart,true);
	statechartEntryAndExitActions_enter(&statechart);
	EXPECT_TRUE(statechartEntryAndExitActionsIface_get_x(&statechart)== 5l);
	EXPECT_TRUE(statechartEntryAndExitActionsIface_get_y(&statechart)== 3l);
}
TEST_F(StatechartEntryExitActions, exitActionsAreExecutedOnEnteringStatechart) {
	
	statechartEntryAndExitActions_enter(&statechart);
	statechartEntryAndExitActions_exit(&statechart);
	EXPECT_TRUE(statechartEntryAndExitActionsIface_get_x(&statechart)== 6l);
	EXPECT_TRUE(statechartEntryAndExitActionsIface_get_y(&statechart)== 2l);
}


