/* Generated by YAKINDU Statechart Tools code generator. */

#include "gtest/gtest.h"
#include "StatechartLocalReactions.h"

#include "sc_timer_service.h"


static StatechartLocalReactions statechart;


//! The timers are managed by a timer service. */
static sc_unit_timer_service_t timer_service;
			
class StatechartLocalReactionsTest : public ::testing::Test{
	protected:
	virtual void SetUp() {
		statechartLocalReactions_init(&statechart);
		sc_timer_service_init(
			&timer_service,
			0,
			(sc_run_cycle_fp) &statechartLocalReactions_runCycle,
			false,
			200,
			&statechart
		);
	}
};


TEST_F(StatechartLocalReactionsTest, statechartLocalReactionsTest) {
	
	statechartLocalReactions_enter(&statechart);
	EXPECT_TRUE(statechartLocalReactions_isStateActive(&statechart, StatechartLocalReactions_main_region_S1));
	EXPECT_TRUE(statechartLocalReactions_isStateActive(&statechart, StatechartLocalReactions_region2_a));
	sc_integer cycles = 0l;
	while (cycles< 10l) {
		EXPECT_TRUE(statechartLocalReactions_isStateActive(&statechart, StatechartLocalReactions_region2_a));
		if (statechartLocalReactionsIface_get_myInt(&statechart)%2l== 0l) {
			EXPECT_TRUE(statechartLocalReactions_isStateActive(&statechart, StatechartLocalReactions_main_region_S1));
		}
		else {
			EXPECT_TRUE(statechartLocalReactions_isStateActive(&statechart, StatechartLocalReactions_main_region_S2));
		}
		sc_timer_service_proceed_cycles(&timer_service, 1);
		cycles += 1l;
		EXPECT_TRUE((statechartLocalReactionsIface_get_myInt(&statechart)== cycles));
	}
}


