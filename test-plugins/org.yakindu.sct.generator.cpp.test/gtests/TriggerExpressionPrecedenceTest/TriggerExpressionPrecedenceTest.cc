/* Generated by YAKINDU Statechart Tools code generator. */
#include <string>
#include "gtest/gtest.h"
#include "TriggerExpressionPrecedence.h"
#include "sc_types.h"
static TriggerExpressionPrecedence* statechart;


class StatemachineTest : public ::testing::Test{
	protected:
	virtual void SetUp() {
		statechart = new TriggerExpressionPrecedence();
		statechart->init();
	}
	virtual void TearDown() {
		delete statechart;
	}
};


TEST_F(StatemachineTest, unsatisfiedTriggerAndFGuardFalseOrFalse) {
	
	statechart->enter();
	
	statechart->getDefaultSCI()->set_c1(false);
	
	statechart->getDefaultSCI()->set_c2(false);
	
	statechart->runCycle();
	
	EXPECT_TRUE(!statechart->getDefaultSCI()->get_e1_transition());
	
}
TEST_F(StatemachineTest, unsatisfiedTriggerAndFGuardTrueOrFalse) {
	
	statechart->enter();
	
	statechart->getDefaultSCI()->set_c1(true);
	
	statechart->getDefaultSCI()->set_c2(false);
	
	statechart->runCycle();
	
	EXPECT_TRUE(!statechart->getDefaultSCI()->get_e1_transition());
	
}
TEST_F(StatemachineTest, unsatisfiedTriggerAndFGuardFalseOrTrue) {
	
	statechart->enter();
	
	statechart->getDefaultSCI()->set_c1(false);
	
	statechart->getDefaultSCI()->set_c2(true);
	
	statechart->runCycle();
	
	EXPECT_TRUE(!statechart->getDefaultSCI()->get_e1_transition());
	
}
TEST_F(StatemachineTest, unsatisfiedTriggerAndFGuardTrueOrTrue) {
	
	statechart->enter();
	
	statechart->getDefaultSCI()->set_c1(true);
	
	statechart->getDefaultSCI()->set_c2(true);
	
	statechart->runCycle();
	
	EXPECT_TRUE(!statechart->getDefaultSCI()->get_e1_transition());
	
}
