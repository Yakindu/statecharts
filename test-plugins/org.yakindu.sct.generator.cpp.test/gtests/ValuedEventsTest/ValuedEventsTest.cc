/* Generated by YAKINDU Statechart Tools code generator. */
#include <string>
#include "gtest/gtest.h"
#include "ValuedEvents.h"
#include "sc_types.h"
static ValuedEvents* statechart;


class StatemachineTest : public ::testing::Test{
	protected:
	virtual void SetUp() {
		statechart = new ValuedEvents();
		statechart->init();
	}
	virtual void TearDown() {
		delete statechart;
	}
};


TEST_F(StatemachineTest, valuedEventsTest) {
	
	statechart->enter();
	
	statechart->runCycle();
	
	EXPECT_TRUE(strcmp(statechart->getDefaultSCI()->get_myString(), "sct") == 0);
	
	statechart->getDefaultSCI()->raise_integerEvent( 23l);
	
	statechart->getDefaultSCI()->raise_booleanEvent( false);
	
	statechart->getDefaultSCI()->raise_realEvent( 20l);
	
	statechart->getDefaultSCI()->raise_stringEvent( "tool");
	
	statechart->runCycle();
	
	EXPECT_TRUE(statechart->isStateActive(ValuedEvents::integer_region_D));
	
	EXPECT_TRUE(statechart->isStateActive(ValuedEvents::string_region_D));
	
	EXPECT_TRUE(statechart->isStateActive(ValuedEvents::boolean_region_D));
	
	EXPECT_TRUE(statechart->isStateActive(ValuedEvents::real_region_D));
	
	EXPECT_TRUE(statechart->getDefaultSCI()->get_myInt()== 23l);
	
	EXPECT_TRUE(statechart->getDefaultSCI()->get_myBool()== false);
	
	EXPECT_TRUE(statechart->getDefaultSCI()->get_myReal()== 20l);
	
	EXPECT_TRUE(strcmp(statechart->getDefaultSCI()->get_myString(), "tool") == 0);
	
}
