/* Generated by YAKINDU Statechart Tools code generator. */
#include <string>
#include "gtest/gtest.h"
#include "HistoryWithoutInitialStep.h"
#include "sc_types.h"
static HistoryWithoutInitialStep* statechart;


class StatemachineTest : public ::testing::Test{
	protected:
	virtual void SetUp() {
		statechart = new HistoryWithoutInitialStep();
		statechart->init();
	}
	virtual void TearDown() {
		delete statechart;
	}
};

void init(){
	
	statechart->enter();
	
	EXPECT_TRUE(statechart->isStateActive(HistoryWithoutInitialStep::main_region_A));
	
	statechart->getDefaultSCI()->raise_toB();
	
	statechart->runCycle();
	
}

TEST_F(StatemachineTest, enterThroughInitialEntry) {
	
	init();
	
	EXPECT_TRUE(statechart->isStateActive(HistoryWithoutInitialStep::main_region_B_r1_C));
	
	statechart->getDefaultSCI()->raise_next();
	
	statechart->runCycle();
	
	EXPECT_TRUE(statechart->isStateActive(HistoryWithoutInitialStep::main_region_B_r1_D));
	
}
TEST_F(StatemachineTest, enterCThroughHistory) {
	
	init();
	
	EXPECT_TRUE(statechart->isStateActive(HistoryWithoutInitialStep::main_region_B_r1_C));
	
	statechart->getDefaultSCI()->raise_toA();
	
	statechart->runCycle();
	
	EXPECT_TRUE(statechart->isStateActive(HistoryWithoutInitialStep::main_region_A));
	
	statechart->getDefaultSCI()->raise_toHistory();
	
	statechart->runCycle();
	
	EXPECT_TRUE(statechart->isStateActive(HistoryWithoutInitialStep::main_region_B_r1_C));
	
}
TEST_F(StatemachineTest, enterDThroughHistory) {
	
	init();
	
	statechart->getDefaultSCI()->raise_next();
	
	statechart->runCycle();
	
	EXPECT_TRUE(statechart->isStateActive(HistoryWithoutInitialStep::main_region_B_r1_D));
	
	statechart->getDefaultSCI()->raise_toA();
	
	statechart->runCycle();
	
	EXPECT_TRUE(statechart->isStateActive(HistoryWithoutInitialStep::main_region_A));
	
	statechart->getDefaultSCI()->raise_toHistory();
	
	statechart->runCycle();
	
	EXPECT_TRUE(statechart->isStateActive(HistoryWithoutInitialStep::main_region_B_r1_D));
	
}
