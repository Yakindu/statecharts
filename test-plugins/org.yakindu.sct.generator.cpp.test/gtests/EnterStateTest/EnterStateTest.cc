/* Generated by YAKINDU Statechart Tools code generator. */
#include <string>
#include "gtest/gtest.h"
#include "EnterState.h"
#include "sc_types.h"
static EnterState* statechart;


class StatemachineTest : public ::testing::Test{
	protected:
	virtual void SetUp() {
		statechart = new EnterState();
		statechart->init();
	}
	virtual void TearDown() {
		delete statechart;
	}
};


TEST_F(StatemachineTest, defaultEntry) {
	
	statechart->enter();
	
	EXPECT_TRUE(statechart->isStateActive(EnterState::r_A));
	
	statechart->getDefaultSCI()->raise_e();
	
	statechart->runCycle();
	
	EXPECT_TRUE(statechart->isStateActive(EnterState::r_B_r_E));
	
}
TEST_F(StatemachineTest, namedEntryThroughNamedTransition) {
	
	statechart->enter();
	
	EXPECT_TRUE(statechart->isStateActive(EnterState::r_A));
	
	statechart->getDefaultSCI()->raise_f();
	
	statechart->runCycle();
	
	EXPECT_TRUE(statechart->isStateActive(EnterState::r_B_r_F));
	
}
TEST_F(StatemachineTest, namedEntryThroughDefaultTransition) {
	
	statechart->enter();
	
	EXPECT_TRUE(statechart->isStateActive(EnterState::r_A));
	
	statechart->getDefaultSCI()->raise_g();
	
	statechart->runCycle();
	
	EXPECT_TRUE(statechart->isStateActive(EnterState::r_B_r_E));
	
}
